<style>
    :root {
      --f7-theme-color: #2196f3;
      --f7-theme-color-rgb: 33, 150, 243;
      --f7-theme-color-shade: #0d8aee;
      --f7-theme-color-tint: #42a5f5;
      --f7-block-margin-vertical: 16px;
      --f7-block-padding-horizontal: 16px;
      --f7-block-padding-vertical: 16px;
    }
    
    .page[data-name="pase-vehicular"] {
      background-color: #f5f7f9;
    }
    
    .navbar {
      position: sticky;
      top: 0;
      z-index: 1000;
      box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }
    .data-table {
      margin-top: 40px;
    }
    
    .toolbar-inner {
      display: flex;
      flex-wrap: wrap;
      gap: 12px;
      padding: 12px 0;
      padding-top: 45px;
      padding-bottom: 30px;
    }
    
    .input-field {
      flex: 1;
      min-width: 150px;
    }
    .table-container{
      border: 1px solid #c91919 !important;
    }
    
    .input-field input {
      width: 100%;
      padding: 10px 12px;
      border: 1px solid #c91919;
      border-radius: 8px;
      font-size: 14px;
      transition: all 0.3s;
    }
    
    .input-field input:focus {
      border-color: var(--f7-theme-color);
      box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.2);
      outline: none;
    }
    
    .data-table {
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 4px 12px rgba(0,0,0,0.05);
    }
    
    .data-table table {
      width: 100%;
      border-collapse: collapse;
    }
    
    .data-table th {
      background-color: #f0f4f8;
      padding: 14px 12px;
      font-weight: 600;
      color: #2c3e50;
      border-bottom: 1px solid #e0e0e0;
    }
    
    .data-table td {
      padding: 12px;
      border-bottom: 1px solid #f0f0f0;
    }
    
    .data-table tr:last-child td {
      border-bottom: none;
    }
    
    .data-table tr:hover {
      background-color: #f9fafb;
    }
    
    .btn-actions {
      display: flex;
      gap: 8px;
      justify-content: center;
    }

    .input-buttons .button-group{
      display: flex;
      gap:6px;
    }
    
    .input-buttons .button{
      font-size: 12px;
      padding: 20px 10px;
    }

    .icon-reset{
      font-size: 16px;
    }

    .btn-action {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      border: none;
      cursor: pointer;
      transition: all 0.2s;
    }
    
    .btn-edit {
      background-color: #e3f2fd;
      color: var(--f7-theme-color);
    }
    
    .btn-delete {
      background-color: #ffebee;
      color: #f44336;
    }
    
    .btn-action:hover {
      transform: scale(1.1);
    }
    
    .empty-state {
      text-align: center;
      padding: 40px 20px;
      color: #9e9e9e;
    }
    
    .empty-state i {
      font-size: 48px;
      margin-bottom: 16px;
      opacity: 0.5;
    }
    
    .popup {
      background: rgba(0,0,0,0.5);
    }
    
    .popup .page {
      border-radius: 16px 16px 0 0;
      overflow: hidden;
      box-shadow: 0 -5px 20px rgba(0,0,0,0.1);
    }
    
    .popup .navbar {
      border-radius: 16px 16px 0 0;
    }
    
    .form-container {
      padding: 20px;
    }
    
    .item-input-outline .item-inner:after {
      background-color: #e0e0e0;
    }
    
    .item-input-outline .item-input-wrap input:focus + .item-inner:after {
      background-color: var(--f7-theme-color);
    }
    
    .stats-container {
      display: flex;
      gap: 12px;
      margin-bottom: 20px;
    }
    
    .stat-card {
      flex: 1;
      background: white;
      border-radius: 12px;
      padding: 16px;
      text-align: center;
      box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }
    
    .stat-value {
      font-size: 24px;
      font-weight: 700;
      color: var(--f7-theme-color);
      margin-bottom: 4px;
    }
    
    .stat-label {
      font-size: 12px;
      color: #757575;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    @media (max-width: 768px) {
      .toolbar-inner {
        /* flex-direction: column; */
        flex-direction: row;
        flex-wrap: wrap;
      }
      
      .input-field {
        min-width: 30%;
      }
      
      .stats-container {
        flex-direction: column;
      }
      
      .data-table {
        overflow-x: auto;
      }
    }
  </style> 
<template>
  <div class="page" data-name="pase-vehicular">
    <div class="navbar">
      <div class="navbar-inner">
        <div class="title" >Pase Vehicular</div>
        <div class="right">
          <a href="#" class="button button-samll button-round button-fill color-green" id="btn-nuevo">+ Nuevo</a>
        </div>
      </div>
    </div>

    <div class="page-content">
      <f7-block>
        <div class="block block-strong block-outilne inset">
        <div class="toolbar-inner">
          <div class="input-field">
            <input type="text" id="buscador" placeholder="Buscar por placa" />
          </div>

          <div class="input-field">
            <input type="date" id="fecha-desde" placeholder="Fecha desde" />
          </div>

          <div class="input-field">
            <input type="date" id="fecha-hasta" placeholder="Fecha hasta" />
          </div>
          <div class="input-field input-buttons">
            <div class="button-group">
              <button class="button button-small button-fill color-blue" id="btn-filtrar">Filtrar</button>
              <button class="button button-small button-outline color-black" id="btn-reset"><i class="f7-icons icon-reset">arrow_clockwise</i></button>
            </div>
          </div>
        </div>
      </div>
      
        <div class="data-table block block-strong block-outline inset table-container">
          <table class="text-align-center">
            <thead>
              <tr>
                <th>ID </th>
                <th>Placa</th>
                <th>Fecha Ingreso</th>
                <th>Acciones</th>
              </tr>
            </thead>
            <tbody id="tabla-vehiculos-body"></tbody>
          </table>
        </div>
      </f7-block>
    </div>

  <div class="popup" id="popup-form">
      <div class="view">
          <div class="page">
          <div class="navbar">
              <div class="navbar-inner">
              <div class="title">Vehículo</div>
              <div class="right">
                  <a class="link popup-close">Cancelar</a>
              </div>
              </div>
          </div>
          <div class="page-content">
              <form id="form-vehiculo">
              <input type="hidden" name="id" />
              <div class="list no-hairlines-md">
                  <div class="list no-hairlines-md">
                    <div class="item-content item-input item-input-outline">
                      <div class="item-inner">
                        <div class="item-title item-label">Placa</div>
                        <div class="item-input-wrap">
                          <input type="text" name="placa" placeholder="PHP123" />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div class="item-content item-input item-input-outline">
                    <div class="item-inner">
                        <div class="item-title item-label">Fecha Ingreso</div>
                        <div class="item-input-wrap">
                        <input type="date" name="fecha_ingreso" required />
                        </div>
                    </div>
                  </div>
              </div>
              <div class="block">
                  <button class="button button-fill" type="submit">Guardar</button>
              </div>
              </form>
          </div>
          </div>
      </div>
  </div>

  </div>
</template>

<script>
import {
  getVehiculos,
  addVehiculo,
  updateVehiculo,
  deleteVehiculo,
  API_URL
} from '../js/data.js';
import Dom7 from 'dom7';

export default (props, { $f7, $on }) => {
  const $$ = Dom7;
  let query = '';
  
  async function renderTabla(data) {
    // const data = await getVehiculos(); 
    const tbody = document.getElementById('tabla-vehiculos-body');
    tbody.innerHTML = '';

    if (data.length === 0) {
      tbody.innerHTML = '<tr><td colspan="4">No se encontraron vehículos.</td></tr>';
    } else {
    data.forEach(v => {
      // console.log("filtro", data);
      const tr = document.createElement('tr');

      const tdId = document.createElement('td');
      tdId.textContent = v.id;
      tr.appendChild(tdId);

      const tdPlaca = document.createElement('td');
      tdPlaca.textContent = v.placa;
      tr.appendChild(tdPlaca);

      const tdFecha = document.createElement('td');
      tdFecha.textContent = v.fecha_ingreso;
      tr.appendChild(tdFecha);

      const tdAcciones = document.createElement('td');
      tdAcciones.innerHTML = `
        <div class="row" style="display: inline-flex; align-items: center; gap: 8px;">
            <a href="#" class="button button-small button-round button-fill color-purple edit" data-id="${v.id}"><i class="f7-icons" style="margin-right: 6px;">pencil</i>Editar</a> |
            <a href="#" class="button button-small button-round button-fill color-red delete" data-id="${v.id}"><i class="f7-icons" style="margin-right: 6px;">trash</i>Eliminar</a>
        </div>
      `;
      tr.appendChild(tdAcciones);

      tbody.appendChild(tr);
    });
  }
}

  function openForm(vehiculo = null) {
    const form = document.getElementById('form-vehiculo');
    form.reset();

    if (vehiculo) {
      form.id.value = vehiculo.id;
      form.placa.value = vehiculo.placa;
      form.fecha_ingreso.value = vehiculo.fecha_ingreso;
    }

    $f7.popup.open('#popup-form');
  }

  async function getVehiculoPorId(id) {
    const vehiculos = await getVehiculos();
    return vehiculos.find(v => v.id === id);
  }

  $on('pageInit', () => {
  const buscador = document.querySelector('#buscador');
  const fechaDesde = document.querySelector('#fecha-desde');
  const fechaHasta = document.querySelector('#fecha-hasta');
  const btnFiltrar = document.querySelector('#btn-filtrar');
    function aplicarFiltros() {
      // const query = buscador.value;
      const desde = fechaDesde.value;
      const hasta = fechaHasta.value;
      let url = `${API_URL}/buscar?query=${encodeURIComponent(query)}`;
      if (desde) url += `&fecha_desde=${encodeURIComponent(desde)}`;
      if (hasta) url += `&fecha_hasta=${encodeURIComponent(hasta)}`;
      console.log("sss",url);
      fetch(url)
        .then(response =>response.text())
        .then(text=> {
          console.log("respuesta pa parsear",text);
          try{
            const data = JSON.parse(text);
            if(data.length === 0){
              renderTabla([]);
            } else {
              renderTabla(data);
            }
          } catch (error) {
            console.error('Error al parsear JSON:', error);
            $f7.dialog.alert('La respuesta del servidor no es un JSON válido.');
          }
            
        }).catch(error => {
        console.error('Error al buscar vehículos:', error);
        $f7.dialog.alert('Ocurrió un error al buscar los vehículos.');
      }); 
    }

    let debounceTimeout;
    buscador.addEventListener('input', () => {
      clearTimeout(debounceTimeout);
      debounceTimeout = setTimeout(() => {
        query = buscador.value;
        aplicarFiltros();
      }, 1000);
    });
    btnFiltrar.addEventListener('click', aplicarFiltros);
    const btnReset = document.querySelector('#btn-reset');
    btnReset.addEventListener('click', () => {
      buscador.value = '';
      fechaDesde.value = '';
      fechaHasta.value = '';
      query = '';
      aplicarFiltros();
    });
    
    async function cargarVehiculos() {
        const data = await getVehiculos();
        renderTabla(data);
    }
    cargarVehiculos();

    $$('#btn-nuevo').on('click', () => {
      openForm();
    });

    $$('#form-vehiculo').on('submit', async (e) => {
      e.preventDefault();
      const form = e.target;
      const data = {
        placa: form.placa.value,
        fecha_ingreso: form.fecha_ingreso.value,
      };

      try {
        if (form.id.value) {
          await updateVehiculo(Number(form.id.value), data);
        } else {
          await addVehiculo(data);
        }

        $f7.popup.close('#popup-form');
        // await renderTabla(); 
        await cargarVehiculos();
      } catch (error) {
        console.error('Error al guardar vehículo:', error);
        $f7.dialog.alert('Ocurrió un error al guardar el vehículo.');
      }
    });

    // Editar
    $$(document).on('click', '.edit', async function () {
      const id = Number(this.dataset.id);
      const vehiculo = await getVehiculoPorId(id);
      openForm(vehiculo);
    });

    // Eliminar
    $$(document).on('click', '.delete', function () {
      const id = Number(this.dataset.id);
      $f7.dialog.confirm('¿Eliminar este vehículo?', async () => {
        try {
          await deleteVehiculo(id);
          await renderTabla();
        } catch (error) {
          console.error('Error al eliminar vehículo:', error);
          $f7.dialog.alert('Ocurrió un error al eliminar el vehículo.');
        }
      });
    });
  });

  return $render;
};
</script>
